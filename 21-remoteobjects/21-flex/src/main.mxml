<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="vertical"
	horizontalAlign="center" verticalAlign="middle" creationComplete="init();">
	
	<mx:Script>
		<![CDATA[
			import es.arcadiaconsulting.flex.handson21.Employee;
			import es.arcadiaconsulting.flex.handson21.EmployeeEditEvent;
			import mx.managers.PopUpManager;
			import mx.controls.Alert;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.remoting.RemoteObject;
			import mx.collections.ArrayCollection;
	
			[Bindable]	
			protected var employees:ArrayCollection;
			
			protected var dialogEdit:Boolean = false;
			
			protected function init():void {
				loadDataSource();
			}
			
			protected function loadDataSource(){
				this.remoteObject.getEmployees();
			}
			
			protected function onResult(event:ResultEvent):void {
				if(event.result as ArrayCollection) {
					this.employees = event.result as ArrayCollection;
				}
			}
			
			protected function onFault(event:FaultEvent):void {
				Alert.show(event.fault.faultString);
			}
			
			protected function onClickAddButton():void {
				this.dialogEdit = false;
				var dialog:EmployeeDialog = PopUpManager.createPopUp(this, EmployeeDialog, true) as EmployeeDialog;
				dialog.addEventListener("employeeEditEvent", onEmployeeCreated);
				PopUpManager.centerPopUp(dialog);
			}
			
			protected function onClickDeleteButton():void {
				this.remoteObject.removeEmployees(this.employeesGrid.selectedItems);
				loadDataSource();
			}
			
			protected function onClickEditButton():void {
				this.dialogEdit = true;
				var dialog:EmployeeDialog = PopUpManager.createPopUp(this, EmployeeDialog, true) as EmployeeDialog;
				dialog.employee = this.employeesGrid.selectedItem as Employee;
				dialog.addEventListener("employeeEditEvent", onEmployeeEdited);
				PopUpManager.centerPopUp(dialog);
			}
			
			protected function onClickSearchButton():void {
				this.remoteObject.findEmployees(this.search.text);
			}
			
			protected function onEmployeeCreated(event:EmployeeEditEvent) {
				this.remoteObject.addEmployee(event.employee);
				loadDataSource();
			}
			
			protected function onEmployeeEdited(event:EmployeeEditEvent) {
				this.remoteObject.updateEmployee(event.employee);
				loadDataSource();
			}
		]]>
	</mx:Script>
	
	<mx:RemoteObject id="remoteObject" destination="EmployeeService"
		result="onResult(event)"
		fault="onFault(event)"/>
		
	<mx:Form>
		<mx:FormHeading label="Formulario de búsqueda"/>
		<mx:FormItem label="Filtro (nombre, email, teléfono)">
			<mx:TextInput id="search" />
		</mx:FormItem>
		<mx:Button id="searchButton" label="Buscar" click="onClickSearchButton();"/>
	</mx:Form>	
	
	<mx:Panel title="Empelados"  width="100%" height="100%">
		<mx:AdvancedDataGrid id="employeesGrid" dataProvider="{this.employees}" width="100%" selectionMode="multipleRows">
			<mx:columns>
				<mx:AdvancedDataGridColumn headerText="Nombre" dataField="name" />
				<mx:AdvancedDataGridColumn headerText="Teléfono" dataField="phone" />
				<mx:AdvancedDataGridColumn headerText="Email" dataField="email" />
			</mx:columns>
		</mx:AdvancedDataGrid>
	</mx:Panel>
	
	<mx:ApplicationControlBar width="100%">
		<mx:Button id="addButton" label="Añadir" click="onClickAddButton();" />
		<mx:Button id="editButton" label="Editar" click="onClickEditButton();" />
		<mx:Button id="deleteButton" label="Borrar" click="onClickDeleteButton();" />
	</mx:ApplicationControlBar>
	
</mx:Application>
