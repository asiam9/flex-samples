<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="horizontal" verticalAlign="middle"
	horizontalAlign="center">
	
	<mx:Script>
		<![CDATA[
			import mx.events.DragEvent;
			import mx.controls.Label;
			import mx.core.IFlexDisplayObject;
			import mx.core.UIComponent;
			import mx.core.DragSource;
			import mx.managers.DragManager;
			import mx.controls.Alert;
			import mx.binding.utils.BindingUtils;
			import mx.collections.ArrayCollection;
		
			[Bindable]
			protected var sourceData:ArrayCollection  = new ArrayCollection(["One", "Two", "Three"]);
			
			[Bindable]
			protected var targetData:ArrayCollection = new ArrayCollection();
			
			protected function onSourceChange(event:MouseEvent):void {
				var ds:DragSource = new DragSource();
				ds.addData(this.source.selectedItem, "selectedItem");
				var label:Label = new Label();
				label.text= this.source.selectedItem as String;
				DragManager.doDrag(event.currentTarget as UIComponent ,ds,event, label);
			}
			
			protected function onTargetChange(event:MouseEvent):void {
				var ds:DragSource = new DragSource();
				ds.addData(this.target.selectedItem, "selectedItem");
				var label:Label = new Label();
				label.text= this.target.selectedItem as String;
				DragManager.doDrag(event.currentTarget as UIComponent ,ds,event, label);
			}
			
			protected function onTargetDragEnter(event: DragEvent): void {
				var data:String = event.dragSource.dataForFormat("selectedItem") as String;
				if(data){
					DragManager.acceptDragDrop(event.currentTarget as UIComponent);
				}
			}
			
			protected function onTargetDragDrop(event: DragEvent): void {
				var data:String = event.dragSource.dataForFormat("selectedItem") as String;
				if(data){
					this.sourceData.removeItemAt(this.sourceData.getItemIndex(data));
					this.targetData.addItem(data);
				}
			}
			
			protected function onSourceDragEnter(event: DragEvent): void {
				var data:String = event.dragSource.dataForFormat("selectedItem") as String;
				if(data){
					DragManager.acceptDragDrop(event.currentTarget as UIComponent);
				}
			}
			
			protected function onSourceDragDrop(event: DragEvent): void {
				var data:String = event.dragSource.dataForFormat("selectedItem") as String;
				if(data){
					this.targetData.removeItemAt(this.targetData.getItemIndex(data));
					this.sourceData.addItem(data);
				}
			}
			
			
		]]>
	</mx:Script>
	
	<mx:Panel title="Seleccione los valores" width="100%" height="100%" layout="horizontal" horizontalAlign="center" verticalAlign="middle">
		<mx:List id="source" mouseDown="onSourceChange(event);" dataProvider="{this.sourceData}" width="100%" 
				dragEnter="onSourceDragEnter(event);" dragDrop="onSourceDragDrop(event);">
		</mx:List>
		<mx:List id="target" mouseDown="onTargetChange(event)" dataProvider="{this.targetData}" width="100%" 
			dragEnter="onTargetDragEnter(event);" dragDrop="onTargetDragDrop(event);">
		</mx:List>
	</mx:Panel>
</mx:Application>
